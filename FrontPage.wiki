#summary One-sentence summary of this page.

Finite element distribution.

= Installation =

femhub is in development, so for now, download the latest SPD tarball (see featured downloads on the right of the [http://code.google.com/p/spdproject/ SPD homepage]), unpack.
{{{
$ make
}}}
Wait about 13 minutes. Then install the following packages:
{{{
$ ./spd -i http://femhub.googlecode.com/files/cmake-2.6.2.spkg
$ ./spd -i http://femhub.googlecode.com/files/judy-1.0.5.spkg
$ ./spd -i http://femhub.googlecode.com/files/mesa-7.2.spkg
$ ./spd -i http://femhub.googlecode.com/files/vtk-cvs-20090316osmesa-2.spkg
$ ./spd -i http://femhub.googlecode.com/files/configobj-4.5.3.spkg
$ cp spkg/installed/vtk-cvs-20090316osmesa-2 spkg/installed/vtk-cvs-20090316osmesa
$ ./spd -i http://femhub.googlecode.com/files/mayavi-3.2.0-osmesa.spkg
}}}
On OS X:
{{{
$ ./spd -i http://femhub.googlecode.com/files/hermes2d-e85b61b.spkg
}}}
Everywhere else:
{{{
$ ./spd -i http://femhub.googlecode.com/files/hermes2d-6ccc852.spkg
}}}

Now test hermes2d+mayavi output in the notebook. Do:
{{{
$ ./spd 
---------------------------------------------------------------------------
| Source Python Distribution, Version 3.4.2spd3, Release Date: 2009-05-20 |
| Type notebook() for the GUI, and license() for information.             |
---------------------------------------------------------------------------
In [1]: notebook()
}}}
create a new worksheet and type the following in one cell:
{{{
from hermes2d import Mesh, H1Shapeset, PrecalcShapeset, H1Space, \
       WeakForm, Solution, ScalarView, LinSystem, DummySolver
from hermes2d.forms import set_forms
from hermes2d.examples import get_example_mesh

mesh = Mesh()
mesh.load(get_example_mesh())
mesh.refine_element(0)
shapeset = H1Shapeset()
pss = PrecalcShapeset(shapeset)

# create an H1 space
space = H1Space(mesh, shapeset)
space.set_uniform_order(5)
space.assign_dofs()

# initialize the discrete problem
wf = WeakForm(1)
set_forms(wf)
solver = DummySolver()
sys = LinSystem(wf, solver)
sys.set_spaces(space)
sys.set_pss(pss)

# assemble the stiffness matrix and solve the system
sys.assemble()
A = sys.get_matrix()
b = sys.get_rhs()
from scipy.linalg import cg
x, res = cg(A, b)
sln = Solution()
sln.set_fe_solution(space, pss, x)

view = ScalarView("Solution")
view.show(sln, lib="mayavi", notebook=True)
}}}
when you evaluate the cell, you should see:

http://femhub.googlecode.com/files/hermes2d-mayavi2-notebook.png

You can run tests to see if everything works:
{{{
$ ./spd 
---------------------------------------------------------------------------
| Source Python Distribution, Version 3.4.2spd2, Release Date: 2009-05-15 |
| Type notebook() for the GUI, and license() for information.             |
---------------------------------------------------------------------------
In [1]: import hermes2d
In [2]: hermes2d.test()
============================= test process starts ==============================
executable:   /home/ondrej/ext/spd-3.4.2spd2-ubuntu-64bit/local/bin/sage.bin  (2.5.2-final-0)

tests/test_basics.py[2] Assembling stiffness matrix...
..                                                  [OK]
tests/test_examples.py[8] ..Assembling stiffness matrix...
.Assembling stiffness matrix...
.Assembling stiffness matrix...
.Assembling stiffness matrix...
.Assembling stiffness matrix...
.Assembling stiffness matrix...
Assembling stiffness matrix...
Assembling stiffness matrix...
.                                          [OK]
tests/test_plots.py[1] Assembling stiffness matrix...
.                                                    [OK]

================== tests finished: 11 passed in 1.13 seconds ===================
Out[2]: True
}}}
You can ignore those debugging print statements "Assembling stiffness matrix..." (they should be silenced in the C++ hermes2d). 

You can also test mayavi:
{{{
$ ./spd 
---------------------------------------------------------------------------
| Source Python Distribution, Version 3.4.2spd3, Release Date: 2009-05-20 |
| Type notebook() for the GUI, and license() for information.             |
---------------------------------------------------------------------------
In [1]: from enthought.mayavi import mlab as M
In [2]: M.options.offscreen = True
In [3]: M.test_mesh()
Out[3]: <enthought.mayavi.modules.surface.Surface object at 0x528fa10>
In [4]: M.axes()
Out[4]: <enthought.mayavi.modules.axes.Axes object at 0x72a6b90>
In [5]: M.title("Mesh")
Out[5]: <enthought.mayavi.modules.text.Text object at 0x72b4d70>
In [6]: M.savefig("mesh.png")
In [7]: 
}}}

Both hermes2d and mayavi tests above can be run in the notebook too.

= Development =

Patches waiting for review: http://code.google.com/p/femhub/issues/list?q=label:NeedsReview

Nice project ideas: http://code.google.com/p/femhub/issues/list?q=label:ProjectIdea

hermes2d issues: http://code.google.com/p/femhub/issues/list?q=label:hermes2d